{"version":3,"file":"static/js/418.ff951a13.chunk.js","mappings":"uOACA,EAA6B,4BAA7B,EAAiE,uBCAjE,EAAuB,mB,UCgBvB,EAda,SAACA,GACZ,OACE,0BACE,iBAAKC,UAAWC,EAAhB,WACE,gBAAKC,IAAI,sGACRH,EAAMI,SACP,4BACE,mCADF,IACqBJ,EAAMK,mB,wCCH7BC,EAAUC,EAAAA,MAAW,SAAAP,GAEvB,IAAIQ,GAAgB,OAAIR,EAAMS,OACzBC,UACAC,KAAI,SAACC,GAAD,OAAO,SAAC,EAAD,CAAiBR,QAASQ,EAAER,QAASS,WAAYD,EAAEC,YAAxCD,EAAEE,OAQ7B,OACI,iBAAKb,UAAWC,EAAhB,WACI,sCACA,SAACa,EAAD,CAAqBC,SAPb,SAACC,GACbjB,EAAMkB,QAAQD,EAAOE,iBAOjB,gBAAKlB,UAAWC,EAAhB,SACKM,UAMXY,GAAcC,EAAAA,EAAAA,IAAiB,IAgBjCN,GAAsBO,EAAAA,EAAAA,GAAU,CAACC,KAAM,yBAAjBD,EAdH,SAACtB,GACpB,OACI,kBAAMgB,SAAUhB,EAAMwB,aAAtB,WACI,0BACI,SAACC,EAAA,EAAD,CAAOC,UAAWC,EAAAA,GAAUC,KAAK,cAAcC,YAAY,WACpDC,SAAU,CAACC,EAAAA,GAAUX,QAEhC,0BACI,iDAQhB,I,UC1BA,GAFyBY,EAAAA,EAAAA,KAfD,SAACC,GACvB,MAAO,CACLxB,MAAOwB,EAAMC,YAAYzB,MACzBU,YAAac,EAAMC,YAAYf,gBAIR,SAACgB,GAC1B,MAAO,CACLjB,QAAS,SAACC,GACRgB,GAASC,EAAAA,EAAAA,IAAqBjB,QAKXa,CAA8C1B,G,SCnBvE,GAAgB,iBAAmB,sCAAsC,UAAY,+BAA+B,QAAU,8B,mBCuC9H,EAtC+B,SAACN,GAE5B,OAA8BqC,EAAAA,EAAAA,WAAS,GAAvC,eAAKC,EAAL,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAASrC,EAAMwC,QAAzC,eAAKA,EAAL,KAAaC,EAAb,MAEAC,EAAAA,EAAAA,YAAU,WACND,EAAUzC,EAAMwC,UACjB,CAACxC,EAAMwC,SAeV,OACI,4BACMF,IACF,4BACI,kCADJ,MACmB,iBAAMK,cAjBR,WACrBJ,GAAY,IAgBW,SAAwCvC,EAAMwC,QAAU,WAG1EF,IACD,0BACI,kBAAOM,SAbI,SAACC,GACpBJ,EAAUI,EAAEC,cAAcC,QAYeC,WAAW,EAAMC,OAlBnC,WACvBV,GAAY,GACZ,EAAKvC,MAAMkD,aAAaV,IAgB8DO,MAAOP,U,SCWrG,GAFiClB,EAAAA,EAAAA,GAAU,CAACC,KAAM,gBAAjBD,EApCT,SAAC,GAAoC,IAAnCE,EAAkC,EAAlCA,aAAc2B,EAAoB,EAApBA,QAASC,EAAW,EAAXA,MAC7C,OACI,kBAAMpC,SAAUQ,EAAhB,WAEI,4BACI,qCACC4B,IAAS,gBAAKnD,UAAWoD,EAAAA,EAAAA,iBAAhB,SACLD,QAGT,4BACI,sCADJ,MACwBE,EAAAA,EAAAA,IAAY,YAAa,WAAY,GAAIC,EAAAA,QAEjE,4BACI,8CADJ,MACgCD,EAAAA,EAAAA,IAAY,GAAI,iBAAkB,GAAIC,EAAAA,GAAO,CAACC,KAAM,iBAEpF,4BACI,mDADJ,KAEKF,EAAAA,EAAAA,IAAY,yBAA0B,4BAA6B,GAAI3B,EAAAA,QAE5E,4BACI,oCADJ,MACsB2B,EAAAA,EAAAA,IAAY,WAAY,UAAW,GAAI3B,EAAAA,QAE7D,4BACI,qCADJ,KACuB8B,OAAOC,KAAKP,EAAQQ,UAAUhD,KAAI,SAAAiD,GACrD,OACI,iBAAe3D,UAAWC,EAAAA,SAA1B,WACI,kCADJ,KACmBoD,EAAAA,EAAAA,IAAYM,EAAK,YAAcA,EAAK,GAAIL,EAAAA,MADjDK,eCQxBC,EAAc,SAAC,GAAsC,IAArCV,EAAoC,EAApCA,QAASW,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,aACpC,OACI,2BACKD,IACD,0BACI,mBAAQE,QAASD,EAAjB,qBAEJ,4BACI,sCADJ,KACwBZ,EAAQc,aAEhC,4BACI,8CADJ,KACgCd,EAAQe,eAAiB,MAAQ,QAEhEf,EAAQe,iBACT,4BACI,mDADJ,KACqCf,EAAQgB,8BAG7C,4BACI,qCADJ,KACuBV,OAAOC,KAAKP,EAAQQ,UAAUhD,KAAI,SAAAiD,GACrD,OAAO,SAACQ,EAAD,CAAmBC,aAAcT,EAAKU,aAAcnB,EAAQQ,SAASC,IAAvDA,aAO/BQ,EAAU,SAAC,GAAkC,IAAjCC,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,aAC5B,OACI,iBAAKrE,UAAWC,EAAAA,QAAhB,WAA2B,uBAAImE,IAA/B,KAAmDC,MAI3D,EAnEoB,SAAC,GAAsE,IAArEnB,EAAoE,EAApEA,QAASX,EAA2D,EAA3DA,OAAQU,EAAmD,EAAnDA,aAAcY,EAAqC,EAArCA,QAASS,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,YAErE,GAA8BnC,EAAAA,EAAAA,WAAS,GAAvC,eAAKC,EAAL,KAAeC,EAAf,KAEA,IAAKY,EACD,OAAO,SAACsB,EAAA,EAAD,IAeX,OACI,0BACI,iBAAKxE,UAAWC,EAAAA,iBAAhB,WACI,gBAAKC,IAAKgD,EAAQuB,OAAOC,MAAQ1E,UAAWC,EAAAA,YAC3C4D,IAAW,kBAAON,KAAM,OAAQZ,SAhBjB,SAACC,GACrBA,EAAE+B,OAAOC,MAAMC,QACfP,EAAU1B,EAAE+B,OAAOC,MAAM,OAepBvC,GACK,SAAC,EAAD,CAAiByC,cAAe5B,EAASnC,SAZ1C,SAACgE,GACdR,EAAYQ,GAAUC,MAAK,WACvB1C,GAAY,UAWF,SAACsB,EAAD,CAAaE,aAAc,WAAOxB,GAAY,IAAQY,QAASA,EAASW,QAASA,KACvF,SAAC,EAAD,CAAwBtB,OAAQA,EAAQU,aAAcA,UChBtE,EAdgB,SAAClD,GACf,OACE,4BACE,SAAC,EAAD,CAAauE,UAAWvE,EAAMuE,UACjBT,QAAS9D,EAAM8D,QACfX,QAASnD,EAAMmD,QACfX,OAAQxC,EAAMwC,OACdgC,YAAaxE,EAAMwE,YACnBtB,aAAclD,EAAMkD,gBACjC,SAAC,EAAD,Q,oBCNAgC,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,EAAAA,MAAAA,KAAAA,WAiCD,OAjCCA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,iBAAAA,MAEF,WACI,IAAIC,EAASC,KAAKpF,MAAMqF,MAAMC,OAAOH,OAChCA,IACDA,EAASC,KAAKpF,MAAMuF,mBAEhBH,KAAKpF,MAAMwF,QAAQC,KAAK,UAGhCL,KAAKpF,MAAM0F,eAAeP,GAC1BC,KAAKpF,MAAM2F,UAAUR,KACxB,+BAED,WACIC,KAAKQ,mBACR,gCAED,SAAmBC,EAAWC,EAAWC,GACjCX,KAAKpF,MAAMqF,MAAMC,OAAOH,QAAUU,EAAUR,MAAMC,OAAOH,QACzDC,KAAKQ,mBAEZ,oBAED,WACI,OACI,SAAC,GAAD,kBAAaR,KAAKpF,OAAlB,IACS8D,SAAUsB,KAAKpF,MAAMqF,MAAMC,OAAOH,OAClChC,QAASiC,KAAKpF,MAAMmD,QACpBX,OAAQ4C,KAAKpF,MAAMwC,OACnBU,aAAckC,KAAKpF,MAAMkD,aACzBqB,UAAWa,KAAKpF,MAAMuE,iBAEtC,EAjCCW,CAAyB3E,EAAAA,WA2C/B,GAAeyF,EAAAA,EAAAA,KACXhE,EAAAA,EAAAA,KARkB,SAACC,GAAD,MAAY,CAC9BkB,QAASlB,EAAMC,YAAYiB,QAC3BX,OAAQP,EAAMC,YAAYD,MAC1BsD,iBAAkBtD,EAAMgE,KAAKd,OAC7Be,OAAQjE,EAAMgE,KAAKC,UAIM,CAACR,eAAAA,EAAAA,GAAgBC,UAAAA,EAAAA,GAAWzC,aAAAA,EAAAA,GAAcqB,UAAAA,EAAAA,GAAWC,YAAAA,EAAAA,KAC9E2B,EAAAA,GAFJ,CAGEjB","sources":["webpack://react-1/./src/components/Profile/MyPosts/MyPosts.module.css?42be","webpack://react-1/./src/components/Profile/MyPosts/Post/Post.module.css?e370","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","webpack://react-1/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?962c","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__QqLYl\",\"posts\":\"MyPosts_posts__026re\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__fdhL5\"};","import React from \"react\";\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div>\r\n      <div className={s.item}>\r\n        <img src='https://i.pinimg.com/236x/c6/01/c2/c601c2841f984591d01e56a8f0696346--avatar-film-avatar-theme.jpg'/>\r\n        {props.message}\r\n        <div>\r\n          <span>like</span> {props.likeCount}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post.jsx\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validator/validator\";\r\nimport {Textarea} from \"../../common/FormsControl/FormsControl\";\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    let postsElements = [...props.posts]\r\n        .reverse()\r\n        .map((p) => <Post key={p.id} message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nconst maxLength20 = maxLengthCreator(20)\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name='newPostText' placeholder='New post'\r\n                       validate={[required, maxLength20]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: 'profileAddNewPostForm'})(AddNewPostForm);\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    },\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps) (MyPosts);\r\n\r\nexport default MyPostsContainer;","// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__11AzN\",\"mainPhoto\":\"ProfileInfo_mainPhoto__R2DAQ\",\"contact\":\"ProfileInfo_contact__QL97v\"};","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        this.props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <b>Status</b>: <span onDoubleClick={activateEditMode}>{props.status || '---'}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\nimport {createField, Input, Textarea} from \"../../common/FormsControl/FormsControl\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport style from '../../common/FormsControl/FormsControl.module.css'\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {\r\n            <div>\r\n                <button>save</button>\r\n                {error && <div className={style.formSummaryError}>\r\n                    {error}\r\n                </div>}\r\n            </div>}\r\n            <div>\r\n                <b> Full name</b>: {createField('Full name', 'fullName', [], Input)}\r\n            </div>\r\n            <div>\r\n                <b> Looking for a job</b>: {createField('', 'lookingForAJob', [], Input, {type: 'checkbox'})}\r\n            </div>\r\n            <div>\r\n                <b> My professional skills</b>:\r\n                {createField('My professional skills', 'lookingForAJobDescription', [], Textarea)}\r\n            </div>\r\n            <div>\r\n                <b>About me</b>: {createField('About me', 'aboutMe', [], Textarea)}\r\n            </div>\r\n            <div>\r\n                <b> Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                return (\r\n                    <div key={key} className={s.contacts}>\r\n                        <b>[key]:</b> {createField(key, 'contacts.' + key, [], Input)}\r\n                    </div>\r\n                )\r\n            })}\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm);\r\n\r\nexport default ProfileDataFormReduxForm;","import React, {useState} from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(() => {\r\n            setEditMode(false);\r\n        });\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large } className={s.mainPhoto}/>\r\n                {isOwner && <input type={'file'} onChange={onMainPhotoSelected}/>}\r\n                {editMode\r\n                    ? <ProfileDataForm initialValuas={profile} onSubmit={onSubmit}/>\r\n                    : <ProfileData goToEditMode={() => {setEditMode(true)}} profile={profile} isOwner={isOwner}/>}\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return (\r\n        <div>\r\n            {isOwner &&\r\n            <div>\r\n                <button onClick={goToEditMode}>Edit</button>\r\n            </div>}\r\n            <div>\r\n                <b> Full name</b>: {profile.fullName}\r\n            </div>\r\n            <div>\r\n                <b> Looking for a job</b>: {profile.lookingForAJob ? 'yes' : 'no'}\r\n            </div>\r\n            {profile.lookingForAJob &&\r\n            <div>\r\n                <b> My professional skills</b>: {profile.lookingForAJobDescription}\r\n            </div>\r\n            }\r\n            <div>\r\n                <b> Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n            })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return (\r\n        <div className={s.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo savePhoto={props.savePhoto}\r\n                   isOwner={props.isOwner}\r\n                   profile={props.profile}\r\n                   status={props.status}\r\n                   saveProfile={props.saveProfile}\r\n                   updateStatus={props.updateStatus} />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     isOwner={!this.props.match.params.userId}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     savePhoto={this.props.savePhoto}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.state,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n)(ProfileContainer);"],"names":["props","className","s","src","message","likeCount","MyPosts","React","postsElements","posts","reverse","map","p","likesCount","id","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","maxLength20","maxLengthCreator","reduxForm","form","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","connect","state","profilePage","dispatch","addPostActionCreator","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","profile","error","style","createField","Input","type","Object","keys","contacts","key","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","Contact","contactTitle","contactValue","savePhoto","saveProfile","Preloader","photos","large","target","files","length","initialValuas","formData","then","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","compose","auth","isAuth","withRouter"],"sourceRoot":""}