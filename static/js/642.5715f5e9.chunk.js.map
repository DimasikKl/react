{"version":3,"file":"static/js/642.5715f5e9.chunk.js","mappings":"4KACA,GAAgB,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,0B,oBCYhL,EATmB,SAACA,GAClB,IAAIC,EAAO,WAAaD,EAAME,GAC9B,OACE,gBAAKC,UAAWC,EAAAA,OAAW,IAAMA,EAAAA,OAAjC,UACE,SAAC,KAAD,CAASC,GAAIJ,EAAb,SAAoBD,EAAMM,UCChC,EANgB,SAACN,GACf,OACE,gBAAKG,UAAWC,EAAAA,QAAhB,SAA4BJ,EAAMO,W,kDCetC,GAAeC,EAAAA,EAAAA,GAAU,CAACC,KAAM,wBAAhC,EAduB,SAACT,GACpB,IAAMU,GAAYC,EAAAA,EAAAA,IAAiB,IACnC,OACI,kBAAMC,SAAUZ,EAAMa,aAAtB,WACI,0BACI,SAACC,EAAA,EAAD,CAAOC,UAAWC,EAAAA,GAAUC,SAAU,CAACC,EAAAA,IAASR,GAAYJ,KAAK,iBAAiBa,YAAY,0BAElG,0BACI,6CCoBhB,EA3BgB,SAACnB,GAEb,IAAIoB,EAAQpB,EAAMqB,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAACC,GAAD,OAAO,SAAC,EAAD,CAAYnB,KAAMmB,EAAEnB,KAAiBJ,GAAIuB,EAAEvB,IAAZuB,EAAEvB,OAC5EwB,EAAmBN,EAAMO,SAASH,KAAI,SAACI,GAAD,OAAO,SAAC,EAAD,CAASrB,QAASqB,EAAErB,SAAcqB,EAAE1B,OAChEkB,EAAMS,eAM3B,OAAK7B,EAAM8B,QAGP,iBAAK3B,UAAWC,EAAAA,QAAhB,WACI,gBAAKD,UAAWC,EAAAA,aAAhB,SACKkB,KAEL,gBAAKnB,UAAWC,EAAAA,SAAhB,UACI,yBAAMsB,OAEV,SAAC,EAAD,CAAgBd,SAdJ,SAACmB,GACjB/B,EAAMgC,YAAYD,EAAOF,uBAGH,SAAC,KAAD,CAAUxB,GAAI,Y,2DCfxC4B,EAA6B,SAACb,GAAD,MAAY,CACzCU,OAAQV,EAAMc,KAAKJ,SCgBvB,GAAeK,E,QAAAA,KACXC,EAAAA,EAAAA,KAfoB,SAAChB,GACvB,MAAO,CACLC,YAAaD,EAAMC,gBAII,SAACgB,GAC1B,MAAO,CACLL,YAAa,SAACH,GACZQ,GAASC,EAAAA,EAAAA,GAAmBT,UDPF,SAACU,GAAe,IACtCC,EADqC,0IAEvC,WACI,OAAIC,KAAKzC,MAAM8B,QACR,SAACS,GAAD,UAAcE,KAAKzC,SADI,SAAC,KAAD,CAAUK,GAAG,eAHR,GACXqC,EAAAA,WAOhC,OADqCN,EAAAA,EAAAA,IAAQH,EAARG,CAAoCI,KCK7E,CAGEG,I,eCxBF,SAASC,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,EAEPF,EAAoBK,KAAO,WAAa,MAAO,IAC/CL,EAAoBM,QAAUN,EAC9BA,EAAoB1C,GAAK,GACzBiD,EAAOC,QAAUR","sources":["webpack://react-1/./src/components/Dialogs/Dialogs.module.css?dc1e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx","components/Dialogs/AddMessageForm|sync"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__dr1Uu\",\"dialogsItems\":\"Dialogs_dialogsItems__2bAzF\",\"active\":\"Dialogs_active__azuKc\",\"messages\":\"Dialogs_messages__u-Lgb\",\"message\":\"Dialogs_message__5+HbG\"};","import React from \"react\";\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n  let path = 'dialogs/' + props.id;\r\n  return (\r\n    <div className={s.dialog + ' ' + s.active}>\r\n      <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <div className={s.message}>{props.message}</div>\r\n  );\r\n}\r\n\r\nexport default Message;","import {maxLengthCreator} from \"../../../utils/validator/validator\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControl/FormsControl\";\r\nimport React from \"react\";\r\n\r\n\r\nconst AddMessageForm = (props) => {\r\n    const maxLength = maxLengthCreator(50);\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} validate={[require, maxLength]} name='newMessageBody' placeholder='Enter your message'/>\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm);","import React from \"react\";\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map((d) => <DialogItem name={d.name} key={d.id} id={d.id}/>);\r\n    let messagesElements = state.messages.map((m) => <Message message={m.message} key={m.id}/>);\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={'/login'}/>\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n            </div>\r\n            <AddMessageForm onSubmit={addNewMessage}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to='/login'/>;\r\n            return <Component{...this.props}/>\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    return ConnectedAuthRedirectComponent;\r\n};","import React from \"react\";\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(sendMessageCreator(newMessageBody));\r\n    },\r\n  };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect,\r\n)(Dialogs);","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 47;\nmodule.exports = webpackEmptyContext;"],"names":["props","path","id","className","s","to","name","message","reduxForm","form","maxLength","maxLengthCreator","onSubmit","handleSubmit","Field","component","Textarea","validate","require","placeholder","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","newMessageBody","isAuth","values","sendMessage","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React","Dialogs","webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports"],"sourceRoot":""}