{"version":3,"file":"static/js/988.eebc0f2b.chunk.js","mappings":"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","sources":["webpack://react-1/./src/components/Profile/MyPosts/MyPosts.module.css?42be","webpack://react-1/./src/components/Profile/MyPosts/Post/Post.module.css?e370","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","webpack://react-1/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?962c","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__+Lv7B\",\"posts\":\"MyPosts_posts__RgfK0\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__e2AOE\"};","import React from \"react\";\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div>\r\n      <div className={s.item}>\r\n        <img src='https://i.pinimg.com/236x/c6/01/c2/c601c2841f984591d01e56a8f0696346--avatar-film-avatar-theme.jpg'/>\r\n        {props.message}\r\n        <div>\r\n          <span>like</span> {props.likeCount}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post.jsx\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validator/validator\";\r\nimport {Textarea} from \"../../common/FormsControl/FormsControl\";\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    let postsElements = [...props.posts]\r\n        .reverse()\r\n        .map((p) => <Post message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nconst maxLength20 = maxLengthCreator(20)\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name='newPostText' placeholder='New post'\r\n                       validate={[required, maxLength20]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: 'profileAddNewPostForm'})(AddNewPostForm);\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    },\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps) (MyPosts);\r\n\r\nexport default MyPostsContainer;","// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__dwxZw\",\"fullName\":\"ProfileInfo_fullName__Ef2Lm\",\"image\":\"ProfileInfo_image__Da5Yh\",\"ava\":\"ProfileInfo_ava__dSjq-\",\"bold\":\"ProfileInfo_bold__bWbdw\"};","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n       setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        this.props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode} >{props.status || '---'}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large}/>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n\r\n  return (\r\n    <div>\r\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.state,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n)(ProfileContainer);"],"names":["props","className","s","src","message","likeCount","MyPosts","React","postsElements","posts","reverse","map","p","likesCount","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","maxLength20","maxLengthCreator","reduxForm","form","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","connect","state","profilePage","dispatch","addPostActionCreator","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","profile","photos","large","Preloader","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","compose","auth","isAuth","withRouter"],"sourceRoot":""}